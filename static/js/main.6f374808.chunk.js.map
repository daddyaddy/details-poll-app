{"version":3,"sources":["assets/svg/details-main-logo.svg","assets/svg/heaphones-icon.svg","components/knob-component/knob-component.tsx","components/tile-option/tile-option.tsx","components/genre-option/genre-option.tsx","components/search-engine-preview/search-input.tsx","components/search-engine-preview/speedometer.tsx","components/search-engine-preview/card.tsx","components/search-engine-preview/card-genres.tsx","components/search-engine-preview/card-moods.tsx","components/search-engine-preview/card-sounds.tsx","components/phone-pointer/phone-pointer.tsx","components/phone-audio/phone-audio.tsx","components/details-spinner/spinner.tsx","components/phone/phone.tsx","components/search-engine-preview/result-page.tsx","components/search-engine-preview/search-engine-preview.tsx","components/question-bar/question-bar.tsx","utils/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Knob","props","state","deg","value","fullAngle","startAngle","endAngle","margin","currentDeg","convertRange","oldMin","oldMax","newMin","newMax","oldValue","startMouseDrag","e","preventDefault","knob","currentTarget","getClientRects","pts","x","left","width","y","top","height","moveMouseHandler","getDeg","clientX","clientY","moveHandlerOperations","document","addEventListener","onNewValue","removeEventListener","startTouchDrag","moveTouchHandler","touches","cX","cY","Math","atan","PI","min","max","renderTicks","ticks","incr","numTicks","tick","ticknobStyle","transform","transformOrigin","push","degrees","size","floor","this","newValue","setState","knobBodyStyle","className","style","onMouseDown","onTouchStart","map","i","key","valueNames","find","valueName","name","React","Component","TileOption","isSelected","handleOptionClick","text","image","onSelect","onUnselect","logo","disabled","selectedClassName","onClick","backgroundImage","GenreOption","genre","SearchInput","icon","placeholder","values","children","inputRef","ref","undefined","backgroundColor","color","SearchButton","Speedometer","viewBox","id","x1","x2","y1","y2","offset","stopColor","in","result","stdDeviation","in2","WebkitTransformOrigin","fill","fillRule","stroke","strokeMiterlimit","strokeOpacity","strokeWidth","d","filter","fillOpacity","Card","hidding","handleCloseClick","setTimeout","onHide","oldProps","hidden","closeRef","title","CardButton","isSelect","handleClick","buttonRef","CardGenres","elements","onSelectGenre","musicGenres","musicSubgenres","subGenre","CardMoods","onSelectMood","Object","keys","musicMoods","theme","mainColor","moods","mood","shadeColor","textColor","CardSounds","currentSlot","currentSound","currentDetail","selectedSounds","onSelectedSound","onChangeLvl","sound","index","buttonAddRef","buttonUpRef","buttonDownRef","musicSounds","details","detail","SoundOption","SoundDescription","renderBlocks","count","blocks","level","PhonePointer","moveEndTimeout","standEndTimeout","eventStartTimeout","eventEndTimeout","previousElementRef","currentEvent","getMiddle","offsetLeft","offsetTop","offsetWidth","offsetHeight","setPositionFromCords","position","setPositionFromElement","element","phoneInnerRef","current","phoneInnerRect","getBoundingClientRect","elementRect","middle","addHover","classList","add","removeHover","remove","clickToElement","click","savePreviousElement","elementRef","animate","isRunning","animationFrame","onAnimationFrameStart","clearTimeout","move","onAnimationFrameMoveStart","onAnimationFrameMoveEnd","animationSpeed","hasOwnProperty","stand","movingDuration","defaultMoveDuration","onAnimationFrameStandingStart","onAnimationFrameStandingEnd","callEvent","standingDuration","defaultStandDuration","onAnimationFrameEnd","eventName","eventDuration","transitionDuration","slideUp","slideDown","PhoneAudio","audio","Audio","countStartAudio","animationFrames","currentSong","ms","forEach","frame","dropTime","play","run","audioUrl","currentTime","load","SpinnerComponent","spacing","randomHeights","getRandomHeights","heights","random","area","progress","degs","Phone","pendingSwitchPageTimeout","pendingProgressInterval","pendingDoneTimeout","createRef","currentFrameIndex","pendingProgress","handleAnimationFrameEnd","length","getElementRef","currentPosition","pending","onPendingDone","onPendingSwitchPage","clearInterval","setInterval","song","songVolume","songPlay","opacity","volume","ResultPage","results","onSelectSong","elementLikeRef","author","ResultSong","isLike","tags","tag","SearchEnginePreview","resultTimeout","refCount","input_title","input_genres","input_moods","input_sounds","input_tempo","input_vocal","input_likedby","button_find","button_close_genre_card","button_close_moods_card","button_close_sounds_card","button_genre_electronic","button_genre_natural","button_add_sound_0","button_up_sound_0","button_down_sound_0","button_add_sound_1","button_up_sound_1","button_down_sound_1","button_add_sound_2","button_up_sound_2","button_down_sound_2","result_song_0","result_song_0_like","result_song_1","result_song_1_like","result_song_2","result_song_2_like","currentSongIndex","selectedGenres","selectedMoods","cardGenresHidden","cardMoodsHidden","cardSoundsHidden","resultPageHidden","addRefs","musicGenre","musicSubgenre","musicTheme","musicMood","musicSound","musicSoundDetail","getInputGenresValues","getInputMoodsValues","getInputSoundsValues","userSelectedGenre","animations","house","searchEngineResults","inputId","newGenre","newLvl","QuestionBar","span","initial","transition","ease","duration","question","scrollToRef","window","scrollTo","App","sectionRefs","currentSection","selectedApplications","bestApplication","bestApplicationRating","songSelection","searchEngine","ourApplicationRating","handleNextSectionButtonClick","handleNextSection","handleSelectApplication","selectedApplication","handleUnselectApplication","unselectedApplication","console","log","handleGenreOptionSelect","selectedGenre","handleGenreOptionUnselect","unselectedGenre","handleBestApplicationSelect","handleBestAppSongSelection","handleOurAppSongSelection","handleBestAppSearchEngine","handleOurAppSearchEngine","initRefs","sectionCount","ornamentsPaths","ornament","section","src","path","div","alt","headphones","musicApplications","musicApplication","marginTop","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6f374808.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/details-main-logo.73dcd75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/heaphones-icon.29b36054.svg\";","import React, { useState, MouseEvent, TouchEvent } from \"react\";\r\nimport CSS from \"csstype\";\r\nimport \"./knob-component.scss\";\r\n\r\ntype KnobState = {\r\n  deg: number;\r\n  value: number;\r\n};\r\n\r\ntype KnobProps = {\r\n  size: number;\r\n  numTicks: number;\r\n  degrees: number;\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  valueNames: Array<ValueName>;\r\n  onNewValue(newValue: number): void;\r\n};\r\n\r\ntype pts = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\ntype ValueName = {\r\n  name: string;\r\n  min: number;\r\n  max: number;\r\n};\r\n\r\nclass Knob extends React.Component<KnobProps, KnobState> {\r\n  state: KnobState = {\r\n    deg: 180,\r\n    value: 50.5,\r\n  };\r\n\r\n  fullAngle: number;\r\n  startAngle: number;\r\n  endAngle: number;\r\n  margin: number;\r\n  currentDeg: number;\r\n\r\n  constructor(props: KnobProps) {\r\n    super(props);\r\n    this.fullAngle = props.degrees;\r\n    this.startAngle = (360 - props.degrees) / 2;\r\n    this.endAngle = this.startAngle + props.degrees;\r\n    this.margin = props.size * 0.15;\r\n    this.currentDeg = Math.floor(\r\n      this.convertRange(\r\n        props.min,\r\n        props.max,\r\n        this.startAngle,\r\n        this.endAngle,\r\n        this.state.value\r\n      )\r\n    );\r\n    this.state = { deg: this.currentDeg, value: this.state.value };\r\n  }\r\n\r\n  convertRange = (\r\n    oldMin: number,\r\n    oldMax: number,\r\n    newMin: number,\r\n    newMax: number,\r\n    oldValue: number\r\n  ) => {\r\n    return (\r\n      ((oldValue - oldMin) * (newMax - newMin)) / (oldMax - oldMin) + newMin\r\n    );\r\n  };\r\n\r\n  moveHandlerOperations(): void {\r\n    if (this.currentDeg === this.startAngle) this.currentDeg--;\r\n\r\n    let newValue = Math.floor(\r\n      this.convertRange(\r\n        this.startAngle,\r\n        this.endAngle,\r\n        this.props.min,\r\n        this.props.max,\r\n        this.currentDeg\r\n      )\r\n    );\r\n    this.setState({\r\n      deg: this.currentDeg,\r\n      value: newValue,\r\n    });\r\n  }\r\n\r\n  startMouseDrag = (e: MouseEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    const knob = e.currentTarget.getClientRects();\r\n    const pts = {\r\n      x: knob[0].left + knob[0].width / 2,\r\n      y: knob[0].top + knob[0].height / 2,\r\n    };\r\n\r\n    const moveMouseHandler: any | EventListener = (e: MouseEvent) => {\r\n      this.currentDeg = this.getDeg(e.clientX, e.clientY, pts);\r\n      this.moveHandlerOperations();\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", moveMouseHandler);\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n      this.props.onNewValue(this.state.value);\r\n      document.removeEventListener(\"mousemove\", moveMouseHandler);\r\n    });\r\n  };\r\n\r\n  startTouchDrag = (e: TouchEvent<HTMLDivElement>) => {\r\n    const knob = e.currentTarget.getClientRects();\r\n    const pts = {\r\n      x: knob[0].left + knob[0].width / 2,\r\n      y: knob[0].top + knob[0].height / 2,\r\n    };\r\n\r\n    const moveTouchHandler: any | EventListener = (e: TouchEvent) => {\r\n      this.currentDeg = this.getDeg(\r\n        e.touches[0].clientX,\r\n        e.touches[0].clientY,\r\n        pts\r\n      );\r\n      this.moveHandlerOperations();\r\n    };\r\n\r\n    document.addEventListener(\"touchmove\", moveTouchHandler);\r\n    document.addEventListener(\"touchend\", (e) => {\r\n      this.props.onNewValue(this.state.value);\r\n      document.removeEventListener(\"touchmove\", moveTouchHandler);\r\n    });\r\n  };\r\n\r\n  getDeg = (cX: number, cY: number, pts: pts) => {\r\n    const x = cX - pts.x;\r\n    const y = cY - pts.y;\r\n    let deg = (Math.atan(y / x) * 180) / Math.PI;\r\n    if ((x < 0 && y >= 0) || (x < 0 && y < 0)) {\r\n      deg += 90;\r\n    } else {\r\n      deg += 270;\r\n    }\r\n    let finalDeg = Math.min(Math.max(this.startAngle, deg), this.endAngle);\r\n    return finalDeg;\r\n  };\r\n\r\n  renderTicks = () => {\r\n    let ticks = [];\r\n    const incr = this.fullAngle / this.props.numTicks;\r\n    for (let deg = this.startAngle; deg <= this.endAngle; deg += incr) {\r\n      const tick = {\r\n        deg: deg,\r\n        ticknobStyle: {\r\n          height: `64%`,\r\n          left: `50%`,\r\n          top: `50%`,\r\n          transform: \"rotate(\" + deg + \"deg)\",\r\n          transformOrigin: \"top\",\r\n        },\r\n      };\r\n      ticks.push(tick);\r\n    }\r\n    return ticks;\r\n  };\r\n\r\n  render() {\r\n    let knobBodyStyle: CSS.Properties = {\r\n      transform: `rotate(${this.state.deg}deg)`,\r\n    };\r\n\r\n    return (\r\n      <div className=\"knob-component-wrapper\">\r\n        <div className=\"knob-wrapper\">\r\n          <div\r\n            className=\"knob-body\"\r\n            style={knobBodyStyle}\r\n            onMouseDown={this.startMouseDrag}\r\n            onTouchStart={this.startTouchDrag}\r\n          >\r\n            <div className=\"knob-hollow\"></div>\r\n          </div>\r\n          <div className=\"knob-value-wrapper\">\r\n            <div className=\"knob-value\">{Math.floor(this.state.value)}%</div>\r\n          </div>\r\n          <div className=\"sticks-rating-wrapper\">\r\n            <div className=\"sticks-rating\">\r\n              {this.props.numTicks\r\n                ? this.renderTicks().map((tick, i) => (\r\n                    <div className=\"tick-box\" style={tick.ticknobStyle}>\r\n                      <div\r\n                        key={i}\r\n                        className={\r\n                          \"tick\" +\r\n                          (tick.deg <= this.currentDeg ? \" active\" : \"\")\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"value-name-wrapper\">\r\n          <div className=\"value-name\">\r\n            {\r\n              this.props.valueNames.find(\r\n                (valueName) =>\r\n                  valueName.max >= this.state.value &&\r\n                  valueName.min <= this.state.value\r\n              )?.name\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Knob;\r\n","import React from \"react\";\r\nimport \"./tile-option.scss\";\r\nimport { MusicApplication } from \"../../App\";\r\n\r\ntype TileOptionProps = {\r\n  disabled?: boolean;\r\n  image?: string;\r\n  text?: string;\r\n  style?: {};\r\n  className?: {};\r\n  onSelect?: (selectedApplication: MusicApplication) => void;\r\n  onUnselect?: (unselectedApplication: MusicApplication) => void;\r\n};\r\n\r\ntype TileOptionState = {\r\n  isSelected: boolean;\r\n};\r\n\r\nclass TileOption extends React.Component<TileOptionProps, TileOptionState> {\r\n  state: TileOptionState = {\r\n    isSelected: false,\r\n  };\r\n\r\n  constructor(props: TileOptionProps) {\r\n    super(props);\r\n  }\r\n\r\n  handleOptionClick = () => {\r\n    const { text, image, onSelect, onUnselect } = this.props;\r\n    this.setState({ isSelected: !this.state.isSelected }, () => {\r\n      if (!(text && image)) return;\r\n      this.state.isSelected &&\r\n        onSelect &&\r\n        onSelect({\r\n          name: text,\r\n          logo: image,\r\n        });\r\n      !this.state.isSelected &&\r\n        onUnselect &&\r\n        onUnselect({\r\n          name: text,\r\n          logo: image,\r\n        });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { disabled, image, text, className, style } = this.props;\r\n    const { isSelected } = this.state;\r\n    const selectedClassName: string = isSelected ? \"selected\" : \"\";\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        className={`option-wrapper ${selectedClassName}`}\r\n        onClick={this.handleOptionClick}\r\n      >\r\n        <div className=\"selected-wrapper\">\r\n          <div className=\"selected\">\r\n            <i className=\"icon-ok\"></i>\r\n          </div>\r\n        </div>\r\n        <div className={`option ${className}`} style={style}>\r\n          <div className=\"icon-wrapper\">\r\n            <div\r\n              className=\"icon\"\r\n              style={{ backgroundImage: `url('${image}')` }}\r\n            ></div>\r\n          </div>\r\n          <span>{text}</span>\r\n        </div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TileOption;\r\n","import React from \"react\";\r\nimport \"./genre-option.scss\";\r\nimport { MusicApplication, MusicGenre } from \"../../App\";\r\n\r\ntype GenreOptionProps = {\r\n  genre: MusicGenre;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  style?: {};\r\n  onSelect?: (selectedGenre: MusicGenre) => void;\r\n  onUnselect?: (unselectedGenre: MusicGenre) => void;\r\n};\r\n\r\ntype GenreOptionState = {\r\n  isSelected: boolean;\r\n};\r\n\r\nclass GenreOption extends React.Component<GenreOptionProps, GenreOptionState> {\r\n  state: GenreOptionState = {\r\n    isSelected: false,\r\n  };\r\n\r\n  constructor(props: GenreOptionProps) {\r\n    super(props);\r\n  }\r\n\r\n  handleOptionClick = () => {\r\n    const { genre, onSelect, onUnselect } = this.props;\r\n    this.setState({ isSelected: !this.state.isSelected }, () => {\r\n      this.state.isSelected && onSelect && onSelect(genre);\r\n      !this.state.isSelected && onUnselect && onUnselect(genre);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { disabled, genre, className, style } = this.props;\r\n    const { isSelected } = this.state;\r\n    const selectedClassName: string = isSelected ? \"selected\" : \"\";\r\n    return (\r\n      <button\r\n        disabled={disabled}\r\n        className={`genre-wrapper ${selectedClassName}`}\r\n        onClick={this.handleOptionClick}\r\n      >\r\n        <div className=\"genre\">{genre.name}</div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenreOption;\r\n","import React from \"react\";\r\nimport \"./search-input.scss\";\r\n\r\nexport type SearchInputValue = {\r\n  className?: {};\r\n  color?: string;\r\n  backgroundColor?: string;\r\n  name: string;\r\n};\r\n\r\ntype SearchInputProps = {\r\n  inputId: number;\r\n  icon?: string;\r\n  placeholder?: string;\r\n  className?: string;\r\n  style?: {};\r\n  values?: Array<SearchInputValue>;\r\n  inputRef?: React.RefObject<HTMLDivElement>;\r\n  onClick?: () => void;\r\n};\r\n\r\ntype SearchInputState = {};\r\n\r\nclass SearchInput extends React.Component<SearchInputProps, SearchInputState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      style,\r\n      icon,\r\n      placeholder,\r\n      values,\r\n      children,\r\n      inputRef,\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        ref={inputRef}\r\n        className={`search-input ${className}`}\r\n        style={style}\r\n        onClick={() => {\r\n          const { onClick } = this.props;\r\n          onClick && onClick();\r\n        }}\r\n      >\r\n        {icon !== undefined && (\r\n          <div className=\"icon\">\r\n            <i className={`icon-${icon}`}></i>\r\n          </div>\r\n        )}\r\n        {placeholder && <div className=\"placeholder\">{placeholder}</div>}\r\n        <div className=\"values\">\r\n          {values?.map((value: SearchInputValue) => (\r\n            <div\r\n              className={`value ${value.className}`}\r\n              style={{\r\n                backgroundColor: value.backgroundColor,\r\n                color: value.color,\r\n              }}\r\n            >\r\n              {value.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"extend\">{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ntype SearchButtonProps = {\r\n  inputId: number;\r\n  inputRef?: React.RefObject<HTMLDivElement>;\r\n  className?: string;\r\n  style?: {};\r\n  onClick?: () => void;\r\n};\r\ntype SearchButtonState = {};\r\n\r\nexport class SearchButton extends React.Component<\r\n  SearchButtonProps,\r\n  SearchButtonState\r\n> {\r\n  constructor(props: SearchButtonProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { inputRef, className, style, onClick } = this.props;\r\n    return (\r\n      <div className=\"search-button-box\" ref={inputRef} onClick={onClick}>\r\n        <button className={`search-button ${className}`} style={style}>\r\n          {this.props.children}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport \"./speedometer.scss\";\r\n\r\ntype SpeedometerProps = {};\r\ntype SpeedometerState = {};\r\n\r\nclass Speedometer extends React.Component<SpeedometerProps, SpeedometerState> {\r\n  constructor(props: SpeedometerProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"speedometer\">\r\n        <svg width=\"70\" height=\"70\" viewBox=\"0 0 400 342\">\r\n          <defs>\r\n            <linearGradient id=\"a\" x1=\"0%\" x2=\"100%\" y1=\"0%\" y2=\"0%\">\r\n              <stop offset=\"0%\" stopColor=\"#b74fa1\"></stop>\r\n              <stop offset=\"100%\" stopColor=\"#f84824\"></stop>\r\n            </linearGradient>\r\n          </defs>\r\n          <defs>\r\n            <linearGradient id=\"c\" x1=\"0%\" x2=\"100%\" y1=\"0%\" y2=\"0%\">\r\n              <stop offset=\"50%\" stopColor=\"#fff\"></stop>\r\n              <stop offset=\"90%\" stopColor=\"rgba(255,255,255,0)\"></stop>\r\n            </linearGradient>\r\n          </defs>\r\n          <defs>\r\n            <filter width=\"200%\" height=\"200%\" x=\"0\" y=\"0\">\r\n              <feOffset in=\"SourceGraphic\" result=\"offOut\"></feOffset>\r\n              <feGaussianBlur\r\n                in=\"matrixOut\"\r\n                result=\"blurOut\"\r\n                stdDeviation=\"25\"\r\n              ></feGaussianBlur>\r\n              <feBlend in=\"SourceGraphic\" in2=\"blurOut\"></feBlend>\r\n            </filter>\r\n          </defs>\r\n          <defs>\r\n            <filter id=\"b\" x=\"0\" y=\"0\">\r\n              <feGaussianBlur\r\n                in=\"SourceGraphic\"\r\n                stdDeviation=\"7\"\r\n              ></feGaussianBlur>\r\n            </filter>\r\n          </defs>\r\n          <path\r\n            style={{\r\n              WebkitTransformOrigin: 180,\r\n\r\n              transformOrigin: 180,\r\n            }}\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n            stroke=\"url(#a)\"\r\n            strokeMiterlimit=\"1\"\r\n            strokeOpacity=\"0.05\"\r\n            strokeWidth=\"52\"\r\n            d=\"M66.906 293.337a160.11 160.11 0 010-226.428 160.11 160.11 0 01226.429 0 160.11 160.11 0 010 226.428\"\r\n            filter=\"url(#b)\"\r\n            transform=\"scale(.9)\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n            stroke=\"#223050\"\r\n            strokeMiterlimit=\"4\"\r\n            strokeOpacity=\"0.5\"\r\n            strokeWidth=\"38\"\r\n            d=\"M66.906 293.337a160.11 160.11 0 010-226.428 160.11 160.11 0 01226.429 0 160.11 160.11 0 010 226.428\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n            stroke=\"url(#a)\"\r\n            strokeMiterlimit=\"4\"\r\n            strokeWidth=\"40\"\r\n            d=\"M66.906 293.337a160.11 160.11 0 010-226.428 160.11 160.11 0 01226.429 0 160.11 160.11 0 010 226.428\"\r\n          ></path>\r\n          <path\r\n            fill=\"url(#c)\"\r\n            style={{\r\n              WebkitTransformOrigin: 59,\r\n\r\n              transformOrigin: 59,\r\n            }}\r\n            fillOpacity=\"0.9\"\r\n            d=\"M180 168L180 192 65 188 65 172z\"\r\n          ></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(226 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(270 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(315 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(405 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(450 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\" transform=\"rotate(494 180 180)\"></path>\r\n          <path d=\"M180 14L180 26\"></path>\r\n          <text x=\"85\" y=\"275\">\r\n            0\r\n          </text>\r\n          <text x=\"50\" y=\"187\">\r\n            5\r\n          </text>\r\n          <text x=\"82\" y=\"100\">\r\n            10\r\n          </text>\r\n          <text x=\"170\" y=\"60\">\r\n            15\r\n          </text>\r\n          <text x=\"255\" y=\"100\">\r\n            20\r\n          </text>\r\n          <text x=\"292\" y=\"187\">\r\n            25\r\n          </text>\r\n          <text x=\"255\" y=\"275\">\r\n            30\r\n          </text>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Speedometer;\r\n","import React from \"react\";\r\nimport \"./card.scss\";\r\n\r\ntype CardProps = {\r\n  closeRef?: React.RefObject<HTMLDivElement>;\r\n  hidden: boolean;\r\n  onHide?: () => void;\r\n  title?: string;\r\n};\r\ntype CardState = {\r\n  hidding: boolean;\r\n};\r\n\r\nexport class Card extends React.Component<CardProps, CardState> {\r\n  state: CardState = {\r\n    hidding: false,\r\n  };\r\n  constructor(props: CardProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidUpdate(oldProps: CardProps) {\r\n    if (oldProps.hidden !== this.props.hidden) {\r\n    }\r\n  }\r\n\r\n  handleCloseClick = () => {\r\n    this.setState({\r\n      hidding: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const { onHide } = this.props;\r\n\r\n      onHide && onHide();\r\n      this.setState({\r\n        hidding: false,\r\n      });\r\n    }, 1100);\r\n  };\r\n\r\n  render() {\r\n    const { hidden, closeRef } = this.props;\r\n    const { hidding } = this.state;\r\n    return (\r\n      !hidden && (\r\n        <div className={`card ${hidding ? `_hidding` : \"\"}`}>\r\n          <div className=\"close-box\">\r\n            <div ref={closeRef} onClick={this.handleCloseClick}>\r\n              <i className=\"icon-cancel\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"title-box\">\r\n            <span>{this.props.title}</span>\r\n          </div>\r\n          <div className=\"content-box\">{this.props.children}</div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\ntype CardButtonProps = {\r\n  isSelect?: boolean;\r\n  value?: any;\r\n  className?: string;\r\n  style?: {};\r\n  buttonRef?: React.RefObject<HTMLDivElement>;\r\n  onSelect?: (value: any | undefined) => void;\r\n  onUnselect?: (value: any | undefined) => void;\r\n};\r\ntype CardButtonState = {\r\n  isSelect: boolean;\r\n};\r\n\r\nexport class CardButton extends React.Component<\r\n  CardButtonProps,\r\n  CardButtonState\r\n> {\r\n  state: CardButtonState = {\r\n    isSelect: false,\r\n  };\r\n  constructor(props: CardButtonProps) {\r\n    super(props);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { onSelect, onUnselect, children, value } = this.props;\r\n    this.setState(\r\n      {\r\n        isSelect: !this.state.isSelect,\r\n      },\r\n      () => {\r\n        if (this.state.isSelect) onSelect && onSelect(value);\r\n        else onUnselect && onUnselect(value);\r\n      }\r\n    );\r\n  };\r\n\r\n  isSelected = () => {\r\n    if (this.props.isSelect === undefined)\r\n      return this.state.isSelect ? \"_select\" : \"\";\r\n    else return this.props.isSelect ? \"_select\" : \"\";\r\n  };\r\n\r\n  render() {\r\n    const { children, className, buttonRef, style } = this.props;\r\n    const { isSelect } = this.state;\r\n    return (\r\n      <div\r\n        ref={buttonRef}\r\n        onClick={this.handleClick}\r\n        style={style}\r\n        className={`card-button ${className} ${this.isSelected()}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card, { CardButton } from \"./card\";\r\nimport musicGenres from \"../../assets/data/genres.json\";\r\nimport musicSubgenres from \"../../assets/data/sub-genres.json\";\r\nimport { Elements } from \"../phone/phone\";\r\nimport { Genre } from \"./search-engine-preview\";\r\n\r\ntype CardGenresProps = {\r\n  elements: Elements;\r\n  hidden: boolean;\r\n  onHide: () => void;\r\n  onSelectGenre?: (genre: Genre) => void;\r\n  onUnselectGenre?: () => void;\r\n};\r\ntype CardGenresState = {};\r\n\r\nexport class CardGenres extends React.Component<\r\n  CardGenresProps,\r\n  CardGenresState\r\n> {\r\n  constructor(props: CardGenresProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { hidden, onHide, elements } = this.props;\r\n    return (\r\n      <Card\r\n        title=\"Select genre\"\r\n        closeRef={elements[\"button_close_genre_card\"]}\r\n        hidden={hidden}\r\n        onHide={onHide}\r\n      >\r\n        <div className=\"card-part\">\r\n          <div className=\"card-header\">What kind of music?</div>\r\n          <div className=\"card-buttons\">\r\n            <CardButton\r\n              buttonRef={elements[\"button_genre_electronic\"]}\r\n              value={{\r\n                key: \"electronic\",\r\n                name: \"Electronic\",\r\n                color: \"\",\r\n                icon: \"\",\r\n              }}\r\n              onSelect={this.props.onSelectGenre}\r\n            >\r\n              Electronic\r\n            </CardButton>\r\n            <CardButton\r\n              buttonRef={elements[\"button_genre_natural\"]}\r\n              value={{\r\n                key: \"natural\",\r\n                name: \"Natural\",\r\n                color: \"\",\r\n                icon: \"\",\r\n              }}\r\n              onSelect={this.props.onSelectGenre}\r\n            >\r\n              Natural\r\n            </CardButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-part\">\r\n          <div className=\"card-header\">What genre?</div>\r\n          <div className=\"card-buttons fragment\">\r\n            {musicGenres.map((genre) => (\r\n              <CardButton\r\n                value={genre}\r\n                buttonRef={elements[`button_genre_${genre.key}`]}\r\n                className=\"mini\"\r\n                onSelect={this.props.onSelectGenre}\r\n              >\r\n                {genre.name}\r\n              </CardButton>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-part\">\r\n          <div className=\"card-header\">What sub-genre?</div>\r\n          <div className=\"card-buttons fragment _2\">\r\n            {musicSubgenres.map((subGenre) => (\r\n              <CardButton\r\n                value={{\r\n                  key: subGenre.key,\r\n                  name: subGenre.name,\r\n                  color: \"\",\r\n                  icon: \"\",\r\n                }}\r\n                buttonRef={elements[`button_genre_${subGenre.key}`]}\r\n                className=\"mini\"\r\n                onSelect={this.props.onSelectGenre}\r\n              >\r\n                {subGenre.name}\r\n              </CardButton>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardGenres;\r\n","import React from \"react\";\r\nimport \"./card-moods.scss\";\r\nimport Card, { CardButton } from \"./card\";\r\nimport musicMoods from \"../../assets/data/moods.json\";\r\nimport { Elements } from \"../phone/phone\";\r\nimport { Mood } from \"./search-engine-preview\";\r\n\r\ntype CardMoodsProps = {\r\n  elements: Elements;\r\n  hidden: boolean;\r\n  onHide: () => void;\r\n  onSelectMood: (mood: Mood) => void;\r\n};\r\ntype CardMoodsState = {};\r\n\r\nexport class CardMoods extends React.Component<CardMoodsProps, CardMoodsState> {\r\n  constructor(props: CardMoodsProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { hidden, onHide, elements, onSelectMood } = this.props;\r\n    return (\r\n      <Card\r\n        title=\"Select mood\"\r\n        closeRef={elements[\"button_close_moods_card\"]}\r\n        hidden={hidden}\r\n        onHide={onHide}\r\n      >\r\n        <div className=\"card-moods\">\r\n          <div className=\"mood-blocks\">\r\n            {Object.keys(musicMoods).map((theme) => (\r\n              <div className=\"block\">\r\n                <div className=\"main-color-wrapper\">\r\n                  <div\r\n                    className=\"main-color\"\r\n                    style={{\r\n                      backgroundColor: musicMoods[theme as \"red\"].mainColor,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <div className={`moods ${theme}`}>\r\n                  <div className=\"shadow\"></div>\r\n                  <div className=\"inner\">\r\n                    {musicMoods[theme as \"red\"].moods.map((mood) => (\r\n                      <CardButton\r\n                        buttonRef={elements[`button_mood_${mood}`]}\r\n                        className=\"mood\"\r\n                        value={\r\n                          {\r\n                            name: mood,\r\n                            color: musicMoods[theme as \"red\"].shadeColor,\r\n                            textColor: musicMoods[theme as \"red\"].textColor,\r\n                          } as Mood\r\n                        }\r\n                        onSelect={onSelectMood}\r\n                      >\r\n                        {mood}\r\n                      </CardButton>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardMoods;\r\n","import React from \"react\";\r\nimport Card, { CardButton } from \"./card\";\r\nimport \"./card-sounds.scss\";\r\nimport \"./sound-description.scss\";\r\n\r\nimport musicSounds from \"../../assets/data/sounds.json\";\r\nimport { Elements } from \"../phone/phone\";\r\nimport { Sound } from \"./search-engine-preview\";\r\n\r\ntype CardSoundsProps = {\r\n  elements: Elements;\r\n  hidden: boolean;\r\n  selectedSounds: Array<Sound>;\r\n  onHide: () => void;\r\n  onSelectedSound: (sound: {\r\n    index: number;\r\n    name: string;\r\n    level?: number;\r\n    detail?: string;\r\n  }) => void;\r\n  onChangeLvl: (index: number, newLvl: number) => void;\r\n};\r\ntype CardSoundsState = {\r\n  currentSlot: number | null;\r\n  currentSound: string | null;\r\n  currentDetail: string | null;\r\n};\r\n\r\nexport class CardSounds extends React.Component<\r\n  CardSoundsProps,\r\n  CardSoundsState\r\n> {\r\n  state: CardSoundsState = {\r\n    currentSlot: null,\r\n    currentSound: null,\r\n    currentDetail: null,\r\n  };\r\n  constructor(props: CardSoundsProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      hidden,\r\n      elements,\r\n      onHide,\r\n      selectedSounds,\r\n      onSelectedSound,\r\n      onChangeLvl,\r\n    } = this.props;\r\n    const { currentSlot, currentSound, currentDetail } = this.state;\r\n    return (\r\n      <Card\r\n        title=\"Select sounds\"\r\n        closeRef={elements[\"button_close_sounds_card\"]}\r\n        hidden={hidden}\r\n        onHide={onHide}\r\n      >\r\n        <div className=\"card-sounds\">\r\n          <div className=\"sound-slots\">\r\n            {selectedSounds.map((sound, i) => (\r\n              <div className=\"slot\">\r\n                <SoundDescription\r\n                  index={i}\r\n                  isSelected={currentSlot === i}\r\n                  buttonAddRef={elements[`button_add_sound_${i}`]}\r\n                  buttonUpRef={elements[`button_up_sound_${i}`]}\r\n                  buttonDownRef={elements[`button_down_sound_${i}`]}\r\n                  sound={sound}\r\n                  onSelect={(index: number) => {\r\n                    this.setState({\r\n                      currentSlot: index,\r\n                      currentSound: null,\r\n                      currentDetail: null,\r\n                    });\r\n                  }}\r\n                  onChangeLvl={onChangeLvl}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"sound-options\">\r\n            {Object.keys(musicSounds).map((key) => (\r\n              <SoundOption\r\n                isSelected={currentSound === key}\r\n                buttonRef={elements[`button_sound_${key}`]}\r\n                name={key}\r\n                onSelect={(name) => {\r\n                  this.setState({\r\n                    currentSound: key,\r\n                  });\r\n                  onSelectedSound({\r\n                    index: currentSlot === null ? 0 : currentSlot,\r\n                    name: key,\r\n                  });\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"sound-details\">\r\n            {musicSounds[currentSound as \"bass\"] &&\r\n              musicSounds[currentSound as \"bass\"].details.map((detail) => (\r\n                <CardButton\r\n                  buttonRef={\r\n                    elements[`button_sound_${currentSound as \"bass\"}_${detail}`]\r\n                  }\r\n                  className={`detail`}\r\n                  value={detail}\r\n                  onSelect={(detail) => {\r\n                    this.setState({\r\n                      currentDetail: detail,\r\n                    });\r\n                    onSelectedSound({\r\n                      index: currentSlot !== null ? currentSlot : 0,\r\n                      name: currentSound !== null ? currentSound : \"bass\",\r\n                      detail: detail,\r\n                    });\r\n                  }}\r\n                >\r\n                  {detail}\r\n                </CardButton>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\ntype SoundOptionProps = {\r\n  name: string;\r\n  isSelected: boolean;\r\n  buttonRef: React.RefObject<HTMLDivElement>;\r\n  onSelect: (name: string) => void;\r\n};\r\ntype SoundOptionState = {};\r\n\r\nclass SoundOption extends React.Component<SoundOptionProps, SoundOptionState> {\r\n  state: SoundOptionState = {};\r\n  constructor(props: SoundOptionProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { name, onSelect, buttonRef, isSelected } = this.props;\r\n    return (\r\n      <div\r\n        className={`option ${isSelected ? \"_selected\" : \"\"}`}\r\n        ref={buttonRef}\r\n        onClick={() => {\r\n          onSelect(name);\r\n        }}\r\n      >\r\n        <div className=\"icon\">\r\n          <div className={`inner ${name}`}></div>\r\n        </div>\r\n        <div className=\"name\">{name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ntype SoundDescriptionProps = {\r\n  index: number;\r\n  isSelected: boolean;\r\n  sound: Sound;\r\n  buttonAddRef: React.RefObject<HTMLDivElement>;\r\n  buttonUpRef: React.RefObject<HTMLDivElement>;\r\n  buttonDownRef: React.RefObject<HTMLDivElement>;\r\n  onSelect: (index: number) => void;\r\n  onChangeLvl: (index: number, newLvl: number) => void;\r\n};\r\ntype SoundDescriptionState = {};\r\n\r\nexport class SoundDescription extends React.Component<\r\n  SoundDescriptionProps,\r\n  SoundDescriptionState\r\n> {\r\n  state: SoundDescriptionState = {};\r\n  constructor(props: SoundDescriptionProps) {\r\n    super(props);\r\n  }\r\n\r\n  renderBlocks = (count: number = 10): Array<JSX.Element> => {\r\n    let blocks: Array<JSX.Element> = [];\r\n    for (let i = 0; i < count; ++i) {\r\n      blocks.push(\r\n        <div className=\"block\">\r\n          <div className=\"inner\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    return blocks;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      sound,\r\n      buttonAddRef,\r\n      buttonUpRef,\r\n      buttonDownRef,\r\n      isSelected,\r\n      onSelect,\r\n      onChangeLvl,\r\n      index,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"sound-description\">\r\n        {sound.name !== null && (\r\n          <div>\r\n            <div className=\"bar-box\">\r\n              <div className=\"bar-controls\">\r\n                <div\r\n                  className=\"slide-up\"\r\n                  ref={buttonUpRef}\r\n                  onClick={() => {\r\n                    if (sound.level === null) return;\r\n                    onChangeLvl(\r\n                      index,\r\n                      sound.level + 15 < 100 ? sound.level + 15 : 100\r\n                    );\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"slide-down\"\r\n                  ref={buttonDownRef}\r\n                  onClick={() => {\r\n                    if (sound.level === null) return;\r\n                    onChangeLvl(\r\n                      index,\r\n                      sound.level - 15 > 0 ? sound.level - 15 : 0\r\n                    );\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"bar\" style={{ height: `${sound.level}%` }}></div>\r\n            </div>\r\n            <div className=\"name-box\">\r\n              <div className=\"name\">\r\n                {sound.detail} {sound.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {sound.name === null && (\r\n          <div\r\n            className={`add-button ${isSelected ? \"_selected\" : \"\"}`}\r\n            ref={buttonAddRef}\r\n            onClick={() => {\r\n              onSelect(index);\r\n            }}\r\n          >\r\n            <i className=\"icon-plus\"></i>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSounds;\r\n","import React from \"react\";\r\nimport \"./phone-pointer.scss\";\r\nimport { PhoneAnimationFrame } from \"../phone/phone\";\r\n\r\ntype PhonePointerProps = {\r\n  isRunning: boolean;\r\n  animationFrame: PhoneAnimationFrame;\r\n  animationSpeed: number;\r\n  elementRef: React.RefObject<HTMLDivElement> | null;\r\n  phoneInnerRef: React.RefObject<HTMLDivElement>;\r\n  onAnimationFrameStart?: () => void;\r\n  onAnimationFrameMoveStart?: () => void;\r\n  onAnimationFrameMoveEnd?: () => void;\r\n  onAnimationFrameStandingStart?: () => void;\r\n  onAnimationFrameStandingEnd?: () => void;\r\n  onAnimationFrameEnd?: () => void;\r\n};\r\ntype PhonePointerState = {\r\n  previousElementRef: null | React.RefObject<HTMLDivElement>;\r\n  currentEvent: null | \"click\" | \"slideUp\" | \"slideDown\";\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nclass PhonePointer extends React.Component<\r\n  PhonePointerProps,\r\n  PhonePointerState\r\n> {\r\n  static readonly width: number = 30;\r\n  static readonly height: number = 30;\r\n  static readonly defaultMoveDuration: number = 900;\r\n  static readonly defaultStandDuration: number = 500;\r\n  moveEndTimeout: NodeJS.Timeout | any;\r\n  standEndTimeout: NodeJS.Timeout | any;\r\n  eventStartTimeout: NodeJS.Timeout | any;\r\n  eventEndTimeout: NodeJS.Timeout | any;\r\n\r\n  state: PhonePointerState = {\r\n    previousElementRef: null,\r\n    currentEvent: null,\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  constructor(props: PhonePointerProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.animate();\r\n  }\r\n\r\n  componentDidUpdate(oldProps: PhonePointerProps) {\r\n    const { isRunning, animationFrame } = this.props;\r\n    if (\r\n      oldProps.isRunning !== isRunning ||\r\n      oldProps.animationFrame !== animationFrame\r\n    ) {\r\n      this.animate();\r\n    }\r\n  }\r\n\r\n  animate() {\r\n    const { isRunning, onAnimationFrameStart, elementRef } = this.props;\r\n    if (!isRunning) {\r\n      const {\r\n        moveEndTimeout,\r\n        standEndTimeout,\r\n        eventStartTimeout,\r\n        eventEndTimeout,\r\n      } = this;\r\n      clearTimeout(moveEndTimeout);\r\n      clearTimeout(standEndTimeout);\r\n      clearTimeout(eventStartTimeout);\r\n      clearTimeout(eventEndTimeout);\r\n      return;\r\n    }\r\n    if (\r\n      elementRef !== null &&\r\n      (elementRef === undefined || elementRef.current === undefined)\r\n    )\r\n      return;\r\n    onAnimationFrameStart && onAnimationFrameStart();\r\n    setTimeout(() => {\r\n      this.move();\r\n    }, 1);\r\n  }\r\n\r\n  getMiddle = (\r\n    offsetLeft: number,\r\n    offsetTop: number,\r\n    offsetWidth: number,\r\n    offsetHeight: number\r\n  ): { x: number; y: number } => {\r\n    return {\r\n      x: offsetLeft + offsetWidth / 2 - PhonePointer.width / 2,\r\n      y: offsetTop + offsetHeight / 2 - PhonePointer.height / 2,\r\n    };\r\n  };\r\n\r\n  setPositionFromCords = (position: { x: number; y: number }): void => {\r\n    this.setState({\r\n      x: position.x,\r\n      y: position.y,\r\n    });\r\n  };\r\n\r\n  setPositionFromElement = (\r\n    element: React.RefObject<HTMLDivElement> | null\r\n  ): void => {\r\n    const { phoneInnerRef } = this.props;\r\n    if (\r\n      element === null ||\r\n      element === undefined ||\r\n      element.current === undefined ||\r\n      element.current === null\r\n    )\r\n      return;\r\n    if (phoneInnerRef.current === null) return;\r\n\r\n    const { offsetWidth, offsetHeight } = element.current as HTMLDivElement;\r\n\r\n    const phoneInnerRect: DOMRect = (phoneInnerRef.current as HTMLDivElement).getBoundingClientRect();\r\n\r\n    const elementRect: DOMRect = element.current.getBoundingClientRect();\r\n\r\n    const middle: { x: number; y: number } = this.getMiddle(\r\n      elementRect.x - phoneInnerRect.x,\r\n      elementRect.y - phoneInnerRect.y,\r\n      offsetWidth,\r\n      offsetHeight\r\n    );\r\n\r\n    this.setState({\r\n      x: middle.x,\r\n      y: middle.y,\r\n    });\r\n  };\r\n\r\n  addHover = (element: React.RefObject<HTMLDivElement> | null): void => {\r\n    if (element === null || element.current === null) return;\r\n    element.current.classList.add(\"_hover\");\r\n  };\r\n\r\n  removeHover = (element: React.RefObject<HTMLDivElement> | null): void => {\r\n    if (element === null || element.current === null) return;\r\n    element.current.classList.remove(\"_hover\");\r\n  };\r\n\r\n  move() {\r\n    const {\r\n      animationFrame,\r\n      elementRef,\r\n      onAnimationFrameMoveStart,\r\n      onAnimationFrameMoveEnd,\r\n      animationSpeed,\r\n    } = this.props;\r\n    const { previousElementRef } = this.state;\r\n    const { position } = animationFrame;\r\n    if (position.hasOwnProperty(\"x\") && position.hasOwnProperty(\"y\")) {\r\n      this.setPositionFromCords(position as { x: number; y: number });\r\n    } else if (position.hasOwnProperty(\"element\")) {\r\n      this.setPositionFromElement(elementRef);\r\n      this.removeHover(previousElementRef);\r\n      this.addHover(elementRef);\r\n    }\r\n\r\n    onAnimationFrameMoveStart && onAnimationFrameMoveStart();\r\n\r\n    clearTimeout(this.moveEndTimeout);\r\n    this.moveEndTimeout = setTimeout(() => {\r\n      onAnimationFrameMoveEnd && onAnimationFrameMoveEnd();\r\n      this.stand();\r\n    }, (animationFrame.movingDuration ? animationFrame.movingDuration : PhonePointer.defaultMoveDuration) / animationSpeed);\r\n  }\r\n\r\n  clickToElement = (element: React.RefObject<HTMLDivElement> | null): void => {\r\n    const { currentEvent } = this.state;\r\n    if (element === null || element.current === null) return;\r\n    element.current.click();\r\n  };\r\n\r\n  stand() {\r\n    const {\r\n      onAnimationFrameStandingStart,\r\n      onAnimationFrameStandingEnd,\r\n      animationFrame,\r\n      animationSpeed,\r\n    } = this.props;\r\n\r\n    onAnimationFrameStandingStart && onAnimationFrameStandingStart();\r\n\r\n    clearTimeout(this.standEndTimeout);\r\n    this.standEndTimeout = setTimeout(() => {\r\n      onAnimationFrameStandingEnd && onAnimationFrameStandingEnd();\r\n      this.callEvent();\r\n    }, (animationFrame.standingDuration ? animationFrame.standingDuration : PhonePointer.defaultStandDuration) / animationSpeed);\r\n  }\r\n\r\n  callEvent() {\r\n    const { onAnimationFrameEnd, animationFrame, elementRef } = this.props;\r\n\r\n    this.setState({\r\n      currentEvent: animationFrame.eventName,\r\n    });\r\n\r\n    this.savePreviousElement();\r\n    clearTimeout(this.eventStartTimeout);\r\n    clearTimeout(this.eventEndTimeout);\r\n    let eventDuration: number = 500;\r\n    switch (this.state.currentEvent) {\r\n      case \"slideUp\":\r\n      case \"slideDown\":\r\n        eventDuration = 1000;\r\n      case \"click\":\r\n        this.eventStartTimeout = setTimeout(() => {\r\n          this.clickToElement(elementRef);\r\n        }, eventDuration / 2);\r\n        this.eventEndTimeout = setTimeout(() => {\r\n          onAnimationFrameEnd && onAnimationFrameEnd();\r\n          this.setState({\r\n            currentEvent: null,\r\n          });\r\n        }, eventDuration);\r\n        break;\r\n      default:\r\n        onAnimationFrameEnd && onAnimationFrameEnd();\r\n        break;\r\n    }\r\n  }\r\n\r\n  savePreviousElement = () => {\r\n    const { elementRef } = this.props;\r\n    if (elementRef === null) return;\r\n    this.setState({\r\n      previousElementRef: elementRef,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { animationFrame } = this.props;\r\n    const { currentEvent, x, y } = this.state;\r\n    return (\r\n      <div\r\n        className=\"phone-pointer-wrapper\"\r\n        style={{\r\n          transitionDuration: `${\r\n            animationFrame.movingDuration\r\n              ? animationFrame.movingDuration\r\n              : PhonePointer.defaultMoveDuration\r\n          }ms`,\r\n          transform: `translate(${x}px, ${y}px)`,\r\n        }}\r\n      >\r\n        <div className={`pointer _${currentEvent}`}>\r\n          <div className=\"pointer-circle\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhonePointer;\r\n","import React from \"react\";\r\nimport \"./phone-audio.scss\";\r\nimport { PhoneAnimationFrame } from \"../phone/phone\";\r\n\r\nconst eventDuration = {\r\n  click: 500,\r\n  slideUp: 1000,\r\n  slideDown: 1000,\r\n};\r\n\r\nexport type seconds = number;\r\n\r\nexport type Song = {\r\n  author: string;\r\n  title: string;\r\n  icon: string;\r\n  audioUrl: string | null;\r\n  dropTime: seconds;\r\n  tags: Array<string>;\r\n};\r\n\r\ntype PhoneAudioProps = {\r\n  animationFrames: Array<PhoneAnimationFrame>;\r\n  defaultMoveDuration: number;\r\n  defaultStandDuration: number;\r\n  currentSong?: Song;\r\n  play: boolean;\r\n  volume?: number;\r\n};\r\ntype PhoneAudioState = {};\r\n\r\nclass PhoneAudio extends React.Component<PhoneAudioProps, PhoneAudioState> {\r\n  state: PhoneAudioState = {};\r\n  audio: HTMLAudioElement = new Audio();\r\n  constructor(props: PhoneAudioProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { play } = this.props;\r\n    if (!play) return;\r\n    this.run();\r\n  }\r\n\r\n  componentDidUpdate(oldProps: PhoneAudioProps) {\r\n    const { play } = this.props;\r\n    if (oldProps.play === play) return;\r\n    if (!play) return;\r\n    this.run();\r\n  }\r\n\r\n  countStartAudio = () => {\r\n    const {\r\n      animationFrames,\r\n      currentSong,\r\n      defaultMoveDuration,\r\n      defaultStandDuration,\r\n    } = this.props;\r\n    if (currentSong === undefined) return 0;\r\n    let ms: number = 3000;\r\n\r\n    animationFrames.forEach((frame) => {\r\n      const { movingDuration, standingDuration, eventName } = frame;\r\n      ms += movingDuration ? movingDuration : defaultMoveDuration;\r\n      ms += standingDuration ? standingDuration : defaultStandDuration;\r\n\r\n      if (eventName !== null) ms += eventDuration[eventName];\r\n    });\r\n    return currentSong.dropTime - ms / 1000;\r\n  };\r\n\r\n  run() {\r\n    const { currentSong } = this.props;\r\n    if (currentSong === undefined) return;\r\n    if (currentSong.audioUrl === null) return;\r\n    this.audio = new Audio(`./audio/${currentSong.audioUrl}`);\r\n    this.audio.currentTime = this.countStartAudio();\r\n    this.audio.load();\r\n    this.audio.play();\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"phone-audio\"></div>;\r\n  }\r\n}\r\n\r\nexport default PhoneAudio;\r\n","import React from \"react\";\r\nimport \"./spinner.scss\";\r\n\r\nexport const random = (min: number, max: number): number => {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\ntype SpinnerComponentProps = {\r\n  progress: number;\r\n  onLoaded?: () => any;\r\n};\r\n\r\ntype SpinnerComponentState = {};\r\n\r\nclass SpinnerComponent extends React.Component<\r\n  SpinnerComponentProps,\r\n  SpinnerComponentState\r\n> {\r\n  spacing: number = 6;\r\n  randomHeights: Array<number> = [];\r\n  constructor(props: SpinnerComponentProps) {\r\n    super(props);\r\n    this.randomHeights = this.getRandomHeights();\r\n  }\r\n\r\n  getRandomHeights(): Array<number> {\r\n    let heights: Array<number> = [];\r\n    for (let i = 0; i < 360 / this.spacing; ++i) {\r\n      heights.push(random(10, 16));\r\n    }\r\n    return heights;\r\n  }\r\n\r\n  render() {\r\n    const progress: number =\r\n      this.props.progress <= 100 ? this.props.progress : 100;\r\n    const area: number = ((progress / 100) * 360) / this.spacing;\r\n    let degs: Array<number> = [];\r\n    for (let i = 0; i <= area; ++i) {\r\n      degs.push(i * this.spacing);\r\n    }\r\n\r\n    return (\r\n      <div className=\"spinner\">\r\n        <div className=\"sticks\">\r\n          {degs.map((deg, i) => (\r\n            <div\r\n              className=\"stick-box\"\r\n              style={{ transform: `rotate(${deg}deg)` }}\r\n            >\r\n              <div\r\n                className=\"stick\"\r\n                style={{\r\n                  top: `${this.randomHeights[i]}%`,\r\n                }}\r\n              >\r\n                <div className=\"fulfillment\"></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"inner\">\r\n            <div className=\"note-box\">\r\n              <i className=\"icon-note\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpinnerComponent;\r\n","import React from \"react\";\r\nimport \"./phone.scss\";\r\nimport PhonePointer from \"../phone-pointer/phone-pointer\";\r\nimport PhoneAudio, { Song } from \"../phone-audio/phone-audio\";\r\nimport SpinnerComponent from \"../details-spinner/spinner\";\r\n\r\nexport type Elements = { [key: string]: React.RefObject<HTMLDivElement> };\r\n\r\nexport type PhoneAnimationFrame = {\r\n  position: { x: number; y: number } | { element: string };\r\n  movingDuration?: number;\r\n  standingDuration?: number;\r\n  eventName: null | \"click\" | \"slideUp\" | \"slideDown\";\r\n};\r\n\r\ntype PhoneProps = {\r\n  animationFrames: Array<PhoneAnimationFrame>;\r\n  animationSpeed?: number;\r\n  elements: Elements;\r\n  animate: boolean;\r\n  pending?: boolean;\r\n  onPendingSwitchPage?: () => void;\r\n  onPendingDone?: () => void;\r\n  song?: Song;\r\n  songPlay?: boolean;\r\n  songVolume?: number;\r\n  onAnimationStart?: () => void;\r\n  onAnimationEnd?: () => void;\r\n};\r\n\r\ntype PhoneState = {\r\n  currentFrameIndex: number;\r\n  pendingProgress: number;\r\n};\r\n\r\nclass Phone extends React.Component<PhoneProps, PhoneState> {\r\n  static readonly defaultMoveDuration: number = 900;\r\n  static readonly defaultStandDuration: number = 500;\r\n  pendingSwitchPageTimeout: NodeJS.Timeout | any;\r\n  pendingProgressInterval: NodeJS.Timeout | any;\r\n  pendingDoneTimeout: NodeJS.Timeout | any;\r\n  phoneInnerRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n  state: PhoneState = {\r\n    currentFrameIndex: 0,\r\n    pendingProgress: 0,\r\n  };\r\n\r\n  constructor(props: PhoneProps) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { animate } = this.props;\r\n    if (!animate) return;\r\n  }\r\n\r\n  componentDidUpdate(oldProps: PhoneProps) {\r\n    const { animate, pending, onPendingDone, onPendingSwitchPage } = this.props;\r\n    if (oldProps.animate === animate && oldProps.pending === pending) return;\r\n\r\n    if (!animate) return;\r\n    if (!pending) return;\r\n    clearInterval(this.pendingProgressInterval);\r\n\r\n    this.pendingProgressInterval = setInterval(() => {\r\n      const { pendingProgress } = this.state;\r\n      if (pendingProgress + 2 <= 100) {\r\n        this.setState({\r\n          pendingProgress: pendingProgress + 4,\r\n        });\r\n      } else {\r\n        onPendingSwitchPage && onPendingSwitchPage();\r\n        clearInterval(this.pendingProgressInterval);\r\n        this.pendingDoneTimeout = setTimeout(() => {\r\n          onPendingDone && onPendingDone();\r\n        }, 1000);\r\n      }\r\n    }, 80);\r\n  }\r\n\r\n  handleAnimationFrameEnd = () => {\r\n    const { animationFrames } = this.props;\r\n    const { currentFrameIndex } = this.state;\r\n    if (currentFrameIndex >= animationFrames.length - 1) return;\r\n\r\n    this.setState({\r\n      currentFrameIndex: currentFrameIndex + 1,\r\n    });\r\n  };\r\n\r\n  getElementRef = (): React.RefObject<HTMLDivElement> | null => {\r\n    const { animationFrames, elements } = this.props;\r\n    const { currentFrameIndex } = this.state;\r\n    const currentPosition = animationFrames[currentFrameIndex].position;\r\n    return currentPosition.hasOwnProperty(\"element\")\r\n      ? elements[(currentPosition as { element: string }).element]\r\n      : null;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      animationFrames,\r\n      children,\r\n      song,\r\n      songPlay,\r\n      songVolume,\r\n      animationSpeed,\r\n      pending,\r\n    } = this.props;\r\n\r\n    const { currentFrameIndex, pendingProgress } = this.state;\r\n\r\n    return (\r\n      <div className=\"search-engine-preview\">\r\n        <div className=\"phone-mock\">\r\n          <div className=\"phone-area\">\r\n            <div className=\"phone-outer\"></div>\r\n            <div className=\"phone-safe\"></div>\r\n            <div className=\"phone-inner\">\r\n              <div className=\"phone-inner-body\" ref={this.phoneInnerRef}>\r\n                {pending && (\r\n                  <div\r\n                    className=\"phone-pending-body fadeIn\"\r\n                    style={{ opacity: 1 }}\r\n                  >\r\n                    <SpinnerComponent progress={pendingProgress} />\r\n                  </div>\r\n                )}\r\n                <PhonePointer\r\n                  isRunning={this.props.animate}\r\n                  elementRef={this.getElementRef()}\r\n                  phoneInnerRef={this.phoneInnerRef}\r\n                  animationFrame={animationFrames[currentFrameIndex]}\r\n                  onAnimationFrameEnd={this.handleAnimationFrameEnd}\r\n                  animationSpeed={animationSpeed ? animationSpeed : 1}\r\n                />\r\n                <PhoneAudio\r\n                  animationFrames={animationFrames}\r\n                  currentSong={song}\r\n                  play={this.props.animate}\r\n                  volume={songVolume}\r\n                  defaultMoveDuration={Phone.defaultMoveDuration}\r\n                  defaultStandDuration={Phone.defaultStandDuration}\r\n                />\r\n                {children}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phone;\r\n","import React from \"react\";\r\nimport \"./result-page.scss\";\r\nimport { CardButton } from \"./card\";\r\nimport { Song } from \"../phone-audio/phone-audio\";\r\nimport { Elements } from \"../phone/phone\";\r\n\r\ntype ResultPageProps = {\r\n  elements: Elements;\r\n  hidden: boolean;\r\n  results: Array<Song>;\r\n  currentSong: Song | null;\r\n  onSelectSong: (song: Song, index: number) => void;\r\n};\r\ntype ResultPageState = {};\r\n\r\nclass ResultPage extends React.Component<ResultPageProps, ResultPageState> {\r\n  state: ResultPageState = {};\r\n  constructor(props: ResultPageProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { elements, hidden, results, currentSong, onSelectSong } = this.props;\r\n    return (\r\n      !hidden && (\r\n        <div className=\"result-page\">\r\n          <div className=\"logo-wrapper\">\r\n            <div className=\"logo\"></div>\r\n          </div>\r\n          <div className=\"songs\">\r\n            {results.map((song, i) => (\r\n              <ResultSong\r\n                elementRef={elements[`result_song_${i}`]}\r\n                elementLikeRef={elements[`result_song_${i}_like`]}\r\n                index={i}\r\n                song={song}\r\n                onSelect={onSelectSong}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"song-player\">\r\n            <div className=\"song-top-wrapper\">\r\n              <div className=\"song-top\">\r\n                <div\r\n                  className=\"song-cover\"\r\n                  style={{\r\n                    backgroundImage: `url(${currentSong?.icon})`,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                {currentSong?.author} - {currentSong?.title}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\ntype ResultSongProps = {\r\n  elementRef: React.RefObject<HTMLDivElement>;\r\n  elementLikeRef: React.RefObject<HTMLDivElement>;\r\n  song: Song;\r\n  index: number;\r\n  onSelect: (song: Song, index: number) => void;\r\n};\r\ntype ResultSongState = {\r\n  isLike: boolean;\r\n};\r\n\r\nexport class ResultSong extends React.Component<\r\n  ResultSongProps,\r\n  ResultSongState\r\n> {\r\n  state: ResultSongState = {\r\n    isLike: false,\r\n  };\r\n  constructor(props: ResultSongProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { song, index, onSelect, elementRef, elementLikeRef } = this.props;\r\n    const { isLike } = this.state;\r\n    return (\r\n      <div\r\n        ref={elementRef}\r\n        className=\"song\"\r\n        onClick={() => {\r\n          onSelect(song, index);\r\n        }}\r\n      >\r\n        <div className=\"song-icon-wrapper\">\r\n          <div className=\"song-icon\">\r\n            <div\r\n              className=\"song-icon-src\"\r\n              style={{\r\n                backgroundImage: `url(${song.icon})`,\r\n              }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"song-description-wrapper\">\r\n          <div className=\"song-button-wrapper\">\r\n            <div\r\n              ref={elementLikeRef}\r\n              className={`song-button ${isLike ? \"like\" : \"\"}`}\r\n              onClick={() => {\r\n                this.setState({ isLike: !this.state.isLike });\r\n              }}\r\n            >\r\n              <i className=\"icon-star\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"song-header-wrapper\">\r\n            <div className=\"song-author\">{song.author}</div>\r\n            <div className=\"song-title\">{song.title}</div>\r\n          </div>\r\n          <div className=\"song-other-wrapper\">\r\n            {song.tags.map((tag) => (\r\n              <CardButton className=\"song-tag\">{tag}</CardButton>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultPage;\r\n","import React from \"react\";\r\nimport \"./search-engine-preview.scss\";\r\nimport \"./speedometer.scss\";\r\nimport SearchInput, { SearchButton } from \"./search-input\";\r\nimport Speedometer from \"./speedometer\";\r\n\r\nimport musicGenres from \"../../assets/data/genres.json\";\r\nimport musicSubgenres from \"../../assets/data/sub-genres.json\";\r\nimport musicMoods from \"../../assets/data/moods.json\";\r\nimport musicSounds from \"../../assets/data/sounds.json\";\r\n\r\nimport animations from \"../../assets/data/@search-engine-animations.json\";\r\n\r\nimport CardGenres from \"./card-genres\";\r\nimport CardMoods from \"./card-moods\";\r\nimport CardSounds from \"./card-sounds\";\r\nimport Phone, { PhoneAnimationFrame, Elements } from \"../phone/phone\";\r\nimport searchEngineResults from \"../../assets/data/@search-engine-results.json\";\r\nimport ResultPage from \"./result-page\";\r\nimport { Song } from \"../phone-audio/phone-audio\";\r\n\r\nexport type Genre = {\r\n  key: string;\r\n  name: string;\r\n  color: string;\r\n  icon: string;\r\n};\r\n\r\nexport type Sound = {\r\n  name: string | null;\r\n  detail: string | null;\r\n  level: number | null;\r\n};\r\n\r\nexport type Mood = {\r\n  name: string;\r\n  color: string;\r\n  textColor: string;\r\n};\r\n\r\ntype SearchEnginePreviewProps = {\r\n  userSelectedGenre: string;\r\n  play: boolean;\r\n};\r\n\r\ntype SearchEnginePreviewState = {\r\n  currentSongIndex: number;\r\n  selectedGenres: Array<Genre>;\r\n  selectedMoods: Array<Mood>;\r\n  selectedSounds: Array<Sound>;\r\n  cardGenresHidden: boolean;\r\n  cardMoodsHidden: boolean;\r\n  cardSoundsHidden: boolean;\r\n  pending: boolean;\r\n  resultPageHidden: boolean;\r\n};\r\n\r\nclass SearchEnginePreview extends React.Component<\r\n  SearchEnginePreviewProps,\r\n  SearchEnginePreviewState\r\n> {\r\n  resultTimeout: NodeJS.Timeout | any;\r\n  refCount: number = 9;\r\n  elements: Elements = {\r\n    input_title: React.createRef(),\r\n    input_genres: React.createRef(),\r\n    input_moods: React.createRef(),\r\n    input_sounds: React.createRef(),\r\n    input_tempo: React.createRef(),\r\n    input_vocal: React.createRef(),\r\n    input_likedby: React.createRef(),\r\n    button_find: React.createRef(),\r\n    button_close_genre_card: React.createRef(),\r\n    button_close_moods_card: React.createRef(),\r\n    button_close_sounds_card: React.createRef(),\r\n    button_genre_electronic: React.createRef(),\r\n    button_genre_natural: React.createRef(),\r\n    button_add_sound_0: React.createRef(),\r\n    button_up_sound_0: React.createRef(),\r\n    button_down_sound_0: React.createRef(),\r\n    button_add_sound_1: React.createRef(),\r\n    button_up_sound_1: React.createRef(),\r\n    button_down_sound_1: React.createRef(),\r\n    button_add_sound_2: React.createRef(),\r\n    button_up_sound_2: React.createRef(),\r\n    button_down_sound_2: React.createRef(),\r\n    result_song_0: React.createRef(),\r\n    result_song_0_like: React.createRef(),\r\n    result_song_1: React.createRef(),\r\n    result_song_1_like: React.createRef(),\r\n    result_song_2: React.createRef(),\r\n    result_song_2_like: React.createRef(),\r\n  };\r\n  state: SearchEnginePreviewState = {\r\n    currentSongIndex: 0,\r\n    selectedGenres: [],\r\n    selectedMoods: [],\r\n    selectedSounds: [\r\n      { name: null, detail: null, level: null },\r\n      { name: null, detail: null, level: null },\r\n      { name: null, detail: null, level: null },\r\n    ],\r\n    cardGenresHidden: true,\r\n    cardMoodsHidden: true,\r\n    cardSoundsHidden: true,\r\n    pending: false,\r\n    resultPageHidden: true,\r\n  };\r\n\r\n  constructor(props: SearchEnginePreviewProps) {\r\n    super(props);\r\n\r\n    this.addRefs();\r\n  }\r\n\r\n  addRefs = () => {\r\n    musicGenres.forEach((musicGenre) => {\r\n      this.elements[`button_genre_${musicGenre.key}`] = React.createRef();\r\n    });\r\n    musicSubgenres.forEach((musicSubgenre) => {\r\n      this.elements[`button_genre_${musicSubgenre.key}`] = React.createRef();\r\n    });\r\n\r\n    Object.keys(musicMoods).forEach((musicTheme) => {\r\n      musicMoods[musicTheme as \"red\"].moods.forEach((musicMood) => {\r\n        this.elements[`button_mood_${musicMood}`] = React.createRef();\r\n      });\r\n    });\r\n\r\n    Object.keys(musicSounds).forEach((musicSound) => {\r\n      this.elements[`button_sound_${musicSound}`] = React.createRef();\r\n      musicSounds[musicSound as \"bass\"].details.forEach((musicSoundDetail) => {\r\n        this.elements[\r\n          `button_sound_${musicSound}_${musicSoundDetail}`\r\n        ] = React.createRef();\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  getInputGenresValues = () =>\r\n    this.state.selectedGenres.map((genre: Genre) => ({\r\n      backgroundColor: \"#1c1c1c\",\r\n      name: genre.name,\r\n    }));\r\n\r\n  getInputMoodsValues = () =>\r\n    this.state.selectedMoods.map((mood: Mood) => ({\r\n      color: mood.textColor,\r\n      backgroundColor: mood.color,\r\n      name: mood.name,\r\n    }));\r\n\r\n  getInputSoundsValues = () =>\r\n    this.state.selectedSounds\r\n      .filter((sound: Sound) => sound.name !== null)\r\n      .map((sound: Sound) => ({\r\n        backgroundColor: \"#1c1c1c\",\r\n        name: `${sound.detail !== null ? sound.detail : \"\"} ${sound.name}`,\r\n      }));\r\n\r\n  render() {\r\n    const { elements } = this;\r\n    const { userSelectedGenre, play } = this.props;\r\n    const { currentSongIndex, selectedSounds, pending } = this.state;\r\n    return (\r\n      <div className=\"search-engine-preview\">\r\n        <Phone\r\n          elements={this.elements}\r\n          animationFrames={animations.house as Array<PhoneAnimationFrame>}\r\n          animationSpeed={1}\r\n          animate={play}\r\n          song={\r\n            searchEngineResults[userSelectedGenre as \"house\"][currentSongIndex]\r\n          }\r\n          songPlay={true}\r\n          songVolume={1}\r\n          pending={pending}\r\n          onPendingSwitchPage={() => {\r\n            this.setState({\r\n              resultPageHidden: false,\r\n            });\r\n          }}\r\n          onPendingDone={() => {\r\n            this.setState({\r\n              pending: false,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"search-app\">\r\n            <div className=\"search-body\">\r\n              <div className=\"start-pointer-position\"></div>\r\n              <div className=\"logo-wrapper\">\r\n                <div className=\"logo\"></div>\r\n              </div>\r\n              <SearchInput\r\n                inputId={1}\r\n                className=\"select-genre\"\r\n                placeholder=\"Title or author\"\r\n                icon=\"star\"\r\n                inputRef={elements[\"input_title\"]}\r\n              />\r\n\r\n              <SearchInput\r\n                inputId={2}\r\n                className=\"select-genre\"\r\n                placeholder=\"Select genre...\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    cardGenresHidden: false,\r\n                  });\r\n                }}\r\n                icon=\"bookmark\"\r\n                values={this.getInputGenresValues()}\r\n                inputRef={elements[\"input_genres\"]}\r\n              />\r\n\r\n              <SearchInput\r\n                inputId={3}\r\n                className=\"select-mood\"\r\n                placeholder=\"Select mood...\"\r\n                icon=\"emo-laugh\"\r\n                values={this.getInputMoodsValues()}\r\n                inputRef={elements[\"input_moods\"]}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    cardMoodsHidden: false,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <SearchInput\r\n                inputId={4}\r\n                className=\"select-genre\"\r\n                placeholder=\"Select important sounds...\"\r\n                icon=\"music\"\r\n                values={this.getInputSoundsValues()}\r\n                inputRef={elements[\"input_sounds\"]}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    cardSoundsHidden: false,\r\n                  });\r\n                }}\r\n              />\r\n              <div className=\"tempo-vocal-box\">\r\n                <SearchInput\r\n                  inputId={5}\r\n                  className=\"tempo-input mini\"\r\n                  placeholder=\"Set Tempo...\"\r\n                  inputRef={elements[\"input_tempo\"]}\r\n                >\r\n                  <div className=\"speed-box\">\r\n                    <Speedometer />\r\n                  </div>\r\n                </SearchInput>\r\n                <SearchInput\r\n                  inputId={6}\r\n                  className=\"vocal-input mini\"\r\n                  placeholder=\"Set Vocal...\"\r\n                  inputRef={elements[\"input_vocal\"]}\r\n                >\r\n                  <div className=\"vocal-box\">\r\n                    <div>\r\n                      <i className=\"icon-mic\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <i className=\"icon-mute\"></i>\r\n                    </div>\r\n                  </div>\r\n                </SearchInput>\r\n              </div>\r\n              <SearchInput inputId={7} inputRef={elements[\"input_likedby\"]}>\r\n                Test\r\n              </SearchInput>\r\n              <div className=\"search-button-wrapper\">\r\n                <SearchButton\r\n                  inputId={8}\r\n                  inputRef={elements[\"button_find\"]}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      pending: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  Find!\r\n                </SearchButton>\r\n              </div>\r\n            </div>\r\n            <CardGenres\r\n              elements={this.elements}\r\n              hidden={this.state.cardGenresHidden}\r\n              onHide={() => {\r\n                this.setState({\r\n                  cardGenresHidden: true,\r\n                });\r\n              }}\r\n              onSelectGenre={(newGenre) => {\r\n                this.setState({\r\n                  selectedGenres: [...this.state.selectedGenres, newGenre],\r\n                });\r\n              }}\r\n            />\r\n            <CardMoods\r\n              elements={this.elements}\r\n              hidden={this.state.cardMoodsHidden}\r\n              onSelectMood={(mood: Mood) => {\r\n                this.setState({\r\n                  selectedMoods: [...this.state.selectedMoods, mood],\r\n                });\r\n              }}\r\n              onHide={() => {\r\n                this.setState({\r\n                  cardMoodsHidden: true,\r\n                });\r\n              }}\r\n            />\r\n            <CardSounds\r\n              elements={this.elements}\r\n              hidden={this.state.cardSoundsHidden}\r\n              selectedSounds={selectedSounds}\r\n              onSelectedSound={({ index, name, level, detail }) => {\r\n                this.setState({\r\n                  selectedSounds: this.state.selectedSounds.map((sound, i) =>\r\n                    i === index\r\n                      ? {\r\n                          ...sound,\r\n                          name: name,\r\n                          detail: detail ? detail : \"\",\r\n                          level: level ? level : 50,\r\n                        }\r\n                      : sound\r\n                  ),\r\n                });\r\n              }}\r\n              onChangeLvl={(index, newLvl) => {\r\n                this.setState({\r\n                  selectedSounds: this.state.selectedSounds.map((sound, i) =>\r\n                    index === i ? { ...sound, level: newLvl } : sound\r\n                  ),\r\n                });\r\n              }}\r\n              onHide={() => {\r\n                this.setState({\r\n                  cardSoundsHidden: true,\r\n                });\r\n              }}\r\n            />\r\n            <ResultPage\r\n              elements={elements}\r\n              results={searchEngineResults[userSelectedGenre as \"house\"]}\r\n              currentSong={\r\n                searchEngineResults[userSelectedGenre as \"house\"][\r\n                  currentSongIndex\r\n                ]\r\n              }\r\n              hidden={this.state.resultPageHidden}\r\n              onSelectSong={(song, i) => {\r\n                this.setState({\r\n                  currentSongIndex: i,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n        </Phone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchEnginePreview;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./question-bar.scss\";\r\n\r\ntype QuestionProps = {\r\n  question: string;\r\n};\r\n\r\nfunction QuestionBar(props: QuestionProps) {\r\n  return (\r\n    <div className=\"question-bar\">\r\n      <div>\r\n        <motion.span\r\n          animate={{ y: 0 }}\r\n          initial={{ y: 100 }}\r\n          transition={{ ease: \"easeOut\", duration: 1.4 }}\r\n        >\r\n          {props.question}\r\n        </motion.span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBar;\r\n","import React from \"react\";\r\n\r\nexport const scrollToRef = (ref: React.RefObject<HTMLElement>) =>\r\n  ref.current !== null ? window.scrollTo(0, ref.current.offsetTop) : false;\r\n\r\nexport const disableScroll = () =>\r\n  (document.ontouchmove = function (e) {\r\n    e.preventDefault();\r\n  });\r\n\r\nexport const enableScroll = () =>\r\n  (document.ontouchmove = function (e) {\r\n    return true;\r\n  });\r\n","import React, { useEffect, ChangeEvent } from \"react\";\r\n\r\nimport \"./App.scss\";\r\nimport \"./app-background.scss\";\r\nimport \"./notification-box.scss\";\r\nimport \"./ornaments-style.scss\";\r\nimport logo from \"./assets/svg/details-main-logo.svg\";\r\nimport headphones from \"./assets/svg/heaphones-icon.svg\";\r\n\r\nimport Knob from \"./components/knob-component/knob-component\";\r\nimport TileOption from \"./components/tile-option/tile-option\";\r\nimport GenreOption from \"./components/genre-option/genre-option\";\r\nimport SearchEnginePreview from \"./components/search-engine-preview/search-engine-preview\";\r\nimport QuestionBar from \"./components/question-bar/question-bar\";\r\nimport { scrollToRef, disableScroll } from \"./utils\";\r\nimport { motion } from \"framer-motion\";\r\nimport SVG from \"react-inlinesvg\";\r\n\r\nimport musicApplications from \"./assets/data/music-applications.json\";\r\nimport musicGenres from \"./assets/data/genres.json\";\r\nimport ornamentsPaths from \"./assets/data/ornaments-paths.json\";\r\nimport valueNames from \"./assets/data/knob-value-names.json\";\r\n\r\nexport type MusicApplication = {\r\n  name: string;\r\n  logo: string;\r\n};\r\n\r\ntype Ornament = {\r\n  path: string;\r\n  section: number;\r\n};\r\n\r\nexport type MusicGenre = {\r\n  name: string;\r\n  color: string;\r\n  icon: string;\r\n};\r\n\r\ntype AppProps = {};\r\n\r\ntype AppState = {\r\n  value: number;\r\n  currentSection: number;\r\n  selectedApplications: Array<MusicApplication>;\r\n  bestApplication: MusicApplication | undefined;\r\n  selectedGenres: Array<MusicGenre>;\r\n  bestApplicationRating: {\r\n    songSelection: number | null;\r\n    searchEngine: number | null;\r\n  };\r\n  ourApplicationRating: {\r\n    songSelection: number | null;\r\n    searchEngine: number | null;\r\n  };\r\n};\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n  static readonly sectionCount: number = 12;\r\n  sectionRefs: Array<React.RefObject<HTMLElement>> = [];\r\n  state: AppState = {\r\n    currentSection: 0,\r\n    value: 0,\r\n    selectedApplications: [],\r\n    bestApplication: undefined,\r\n    selectedGenres: [],\r\n    bestApplicationRating: {\r\n      songSelection: null,\r\n      searchEngine: null,\r\n    },\r\n    ourApplicationRating: {\r\n      songSelection: null,\r\n      searchEngine: null,\r\n    },\r\n  };\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n    this.initRefs();\r\n  }\r\n\r\n  initRefs() {\r\n    for (let i = 0; i < App.sectionCount; ++i) {\r\n      this.sectionRefs.push(React.createRef());\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    scrollToRef(this.sectionRefs[this.state.currentSection]);\r\n  }\r\n\r\n  handleNextSectionButtonClick = () => {\r\n    this.setState(\r\n      {\r\n        currentSection: this.state.currentSection + 1,\r\n      },\r\n      () => {\r\n        scrollToRef(this.sectionRefs[this.state.currentSection]);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleNextSection = (i: number = 1) => {\r\n    this.setState(\r\n      {\r\n        currentSection: this.state.currentSection + i,\r\n      },\r\n      () => {\r\n        scrollToRef(this.sectionRefs[this.state.currentSection]);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSelectApplication = (selectedApplication: MusicApplication) => {\r\n    this.setState({\r\n      selectedApplications: [\r\n        ...this.state.selectedApplications,\r\n        selectedApplication,\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleUnselectApplication = (unselectedApplication: MusicApplication) => {\r\n    this.setState({\r\n      selectedApplications: this.state.selectedApplications.filter(\r\n        (selectedApplication: MusicApplication) => {\r\n          console.log(selectedApplication, unselectedApplication);\r\n          return selectedApplication.name !== unselectedApplication.name;\r\n        }\r\n      ),\r\n    });\r\n  };\r\n\r\n  handleGenreOptionSelect = (selectedGenre: MusicGenre) => {\r\n    this.setState({\r\n      selectedGenres: [...this.state.selectedGenres, selectedGenre],\r\n    });\r\n  };\r\n\r\n  handleGenreOptionUnselect = (unselectedGenre: MusicGenre) => {\r\n    this.setState({\r\n      selectedGenres: this.state.selectedGenres.filter(\r\n        (selectedGenre: MusicGenre) => selectedGenre !== unselectedGenre\r\n      ),\r\n    });\r\n  };\r\n\r\n  handleBestApplicationSelect = (selectedApplication: MusicApplication) => {\r\n    this.setState({\r\n      bestApplication: selectedApplication,\r\n    });\r\n    this.handleNextSectionButtonClick();\r\n  };\r\n\r\n  handleBestAppSongSelection = (newValue: number) => {\r\n    this.setState({\r\n      bestApplicationRating: {\r\n        ...this.state.bestApplicationRating,\r\n        songSelection: newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOurAppSongSelection = (newValue: number) => {\r\n    this.setState({\r\n      ourApplicationRating: {\r\n        ...this.state.ourApplicationRating,\r\n        songSelection: newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleBestAppSearchEngine = (newValue: number) => {\r\n    this.setState({\r\n      bestApplicationRating: {\r\n        ...this.state.bestApplicationRating,\r\n        searchEngine: newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOurAppSearchEngine = (newValue: number) => {\r\n    this.setState({\r\n      ourApplicationRating: {\r\n        ...this.state.ourApplicationRating,\r\n        searchEngine: newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"background\">\r\n          <div className=\"sculpture-box\">\r\n            <div className=\"sculpture\"></div>\r\n            <div className=\"censored-eyes\"></div>\r\n          </div>\r\n          <div className=\"ornaments\">\r\n            <div className=\"ornaments-wrapper center\">\r\n              {ornamentsPaths.map((ornament: Ornament) =>\r\n                this.state.currentSection == ornament.section ? (\r\n                  <SVG src={ornament.path} />\r\n                ) : null\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <section className=\"App-header\" ref={this.sectionRefs[0]}>\r\n            <div>\r\n              <div className=\"motto\">\r\n                <motion.div\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 3 }}\r\n                >\r\n                  new <span>alternative</span> <br /> in music world\r\n                </motion.div>\r\n              </div>\r\n              <img className=\"logo\" src={logo} alt=\"details-logo\" />\r\n              <div className=\"notification-box\">\r\n                <div className=\"notification\">\r\n                  <img className=\"icon\" src={headphones} />\r\n                  <div className=\"text\">\r\n                    Załóż słuchawki <br /> dla lepszego efektu\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"main\"\r\n                  onClick={this.handleNextSectionButtonClick}\r\n                >\r\n                  start\r\n                </button>\r\n              </div>\r\n              <div className=\"ornament right top\"></div>\r\n            </div>\r\n          </section>\r\n          <section className=\"A\" ref={this.sectionRefs[1]}>\r\n            <div>\r\n              <div className=\"question-count\">1/8</div>\r\n              {this.state.currentSection == 1 && (\r\n                <QuestionBar question=\"Gdzie słuchasz muzyki?\" />\r\n              )}\r\n              <div className=\"options\">\r\n                {musicApplications.map((musicApplication: MusicApplication) => (\r\n                  <TileOption\r\n                    text={musicApplication.name}\r\n                    image={musicApplication.logo}\r\n                    onSelect={this.handleSelectApplication}\r\n                    onUnselect={this.handleUnselectApplication}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"main\"\r\n                  onClick={() => {\r\n                    if (this.state.selectedApplications.length === 1) {\r\n                      this.handleBestApplicationSelect(\r\n                        this.state.selectedApplications[0]\r\n                      );\r\n                      this.handleNextSection(2);\r\n                      return;\r\n                    }\r\n                    this.handleNextSection(1);\r\n                  }}\r\n                >\r\n                  Continue\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"B\" ref={this.sectionRefs[2]}>\r\n            <div>\r\n              <div className=\"question-count\">2/8</div>\r\n              {this.state.currentSection == 2 && (\r\n                <QuestionBar question=\"Która z wybranych aplikacji jest najlepsza?\" />\r\n              )}\r\n              <div className=\"options\">\r\n                {this.state.selectedApplications.map(\r\n                  (musicApplication: MusicApplication) => (\r\n                    <TileOption\r\n                      text={musicApplication.name}\r\n                      image={musicApplication.logo}\r\n                      onSelect={this.handleBestApplicationSelect}\r\n                    />\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"B\" ref={this.sectionRefs[3]}>\r\n            <div>\r\n              <div className=\"question-count\">3/8</div>\r\n              {this.state.currentSection == 3 && (\r\n                <QuestionBar question=\"Jakich gatunków muzycznych słuchasz?\" />\r\n              )}\r\n              <div className=\"genres\">\r\n                {musicGenres.map((musicGenre: any) => (\r\n                  <GenreOption\r\n                    genre={musicGenre}\r\n                    onSelect={this.handleGenreOptionSelect}\r\n                    onUnselect={this.handleGenreOptionUnselect}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <button\r\n                className=\"main\"\r\n                style={{ marginTop: \"15px\" }}\r\n                onClick={this.handleNextSectionButtonClick}\r\n              >\r\n                Next!\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <section className=\"C\" ref={this.sectionRefs[4]}>\r\n            <div>\r\n              <div className=\"question-count\">4/8</div>\r\n              {this.state.currentSection == 4 && (\r\n                <QuestionBar\r\n                  question={`Jak ${this.state.bestApplication?.name} radzi sobie zdobieraniem utworów dla ciebie?`}\r\n                />\r\n              )}\r\n              <div className=\"question-bar\">\r\n                <div>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"knob-area\">\r\n                <Knob\r\n                  size={100}\r\n                  numTicks={40}\r\n                  degrees={270}\r\n                  min={1}\r\n                  max={100}\r\n                  value={0}\r\n                  valueNames={valueNames[0][4]}\r\n                  onNewValue={this.handleBestAppSongSelection}\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"main\"\r\n                onClick={this.handleNextSectionButtonClick}\r\n              >\r\n                Next!\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <section\r\n            className=\"D\"\r\n            ref={this.sectionRefs[5]}\r\n            onClick={this.handleNextSectionButtonClick}\r\n          >\r\n            <div className=\"preview-bar\">\r\n              <div>Generator Gustu Muzycznego</div>\r\n            </div>\r\n            <div className=\"preview-text\">\r\n              Mamy lepszy pomysł! Chcemy wysyłać Ci próbki różnych utworów i\r\n              umożliwić Ci ich ocenianie. Dzięki temu poznamy jeszcze lepiej\r\n              twój gust muzyczny! Zobacz preview: ... Jak oceniasz to\r\n              rozwiązanie?\r\n            </div>\r\n            <div>\r\n              <Knob\r\n                size={100}\r\n                numTicks={40}\r\n                degrees={270}\r\n                min={1}\r\n                max={100}\r\n                value={0}\r\n                valueNames={valueNames[0][5]}\r\n                onNewValue={this.handleOurAppSongSelection}\r\n              />\r\n            </div>\r\n          </section>\r\n          <section className=\"E\" ref={this.sectionRefs[6]}>\r\n            <div>\r\n              <div className=\"question-count\">5/8</div>\r\n              {this.state.currentSection == 6 && (\r\n                <QuestionBar\r\n                  question={`Jak oceniasz wyszukiwarkę w \r\n                  ${this.state.bestApplication?.name}?`}\r\n                />\r\n              )}\r\n              <div className=\"knob-area\">\r\n                <Knob\r\n                  size={100}\r\n                  numTicks={40}\r\n                  degrees={270}\r\n                  min={1}\r\n                  max={100}\r\n                  value={0}\r\n                  valueNames={valueNames[0][6]}\r\n                  onNewValue={this.handleBestAppSearchEngine}\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"main\"\r\n                onClick={this.handleNextSectionButtonClick}\r\n              >\r\n                Next!\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <section\r\n            className=\"F\"\r\n            ref={this.sectionRefs[7]}\r\n            onClick={() => {\r\n              this.handleNextSection();\r\n            }}\r\n          >\r\n            <div className=\"preview-bar\">\r\n              <div>\r\n                <span>Rozbudowana </span>\r\n                <span>wyszukiwarka utworów</span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <SearchEnginePreview\r\n                play={this.state.currentSection === 7}\r\n                userSelectedGenre={\"house\"}\r\n              />\r\n            </div>\r\n          </section>\r\n          <section className=\"G\" ref={this.sectionRefs[8]}>\r\n            <div>\r\n              <div className=\"question-count\">6/8</div>\r\n              {this.state.currentSection == 8 && (\r\n                <QuestionBar question={`Jak bardzo interesujesz się muzyką?`} />\r\n              )}\r\n              <div className=\"knob-area\">\r\n                <div>\r\n                  {/* <Knob\r\n                    size={100}\r\n                    numTicks={40}\r\n                    degrees={270}\r\n                    min={1}\r\n                    max={100}\r\n                    value={0}\r\n                    valueNames={valueNames[0][8]}\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                className=\"main\"\r\n                onClick={this.handleNextSectionButtonClick}\r\n              >\r\n                next\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <section className=\"H\" ref={this.sectionRefs[9]}>\r\n            <div>\r\n              <div className=\"question-count\">7/8</div>\r\n              {this.state.currentSection == 9 && (\r\n                <QuestionBar\r\n                  question={`Jak często dzielisz się muzyką z innymi?`}\r\n                />\r\n              )}\r\n              <div className=\"knob-area\">\r\n                <div>\r\n                  {/* <Knob\r\n                    size={100}\r\n                    numTicks={40}\r\n                    degrees={270}\r\n                    min={1}\r\n                    max={100}\r\n                    value={0}\r\n                    valueNames={valueNames[0][9]}\r\n                  /> */}\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"main\"\r\n                onClick={this.handleNextSectionButtonClick}\r\n              >\r\n                next\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <section className=\"I\" ref={this.sectionRefs[10]}>\r\n            <div>\r\n              <div className=\"question-count\">8/8</div>\r\n              {this.state.currentSection == 10 && (\r\n                <QuestionBar question=\"Czy jesteś otwarty na nowe gatunki muzyczne?\" />\r\n              )}\r\n              <div className=\"knob-area\">\r\n                <div>Lorem ipsum</div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}